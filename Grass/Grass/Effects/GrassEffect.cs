//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Grass.Effects
{
    using Evergine.Common.Graphics;
    using Evergine.Framework.Graphics;
    using Evergine.Framework.Graphics.Effects;
    using Evergine.Mathematics;
    
    
    [Evergine.Framework.Graphics.MaterialDecoratorAttribute("d9d91c9a-06fe-4a72-8342-eb019b16cca6")]
    public partial class GrassEffect : Evergine.Framework.Graphics.MaterialDecorator
    {
        
        public GrassEffect(Evergine.Framework.Graphics.Effects.Effect effect) : 
                base(new Material(effect))
        {
        }
        
        public GrassEffect(Evergine.Framework.Graphics.Material material) : 
                base(material)
        {
        }
        
        public Evergine.Mathematics.Matrix4x4 PerDrawCall_WorldViewProj
        {
            get
            {
                return this.material.CBuffers[0].GetBufferData<Evergine.Mathematics.Matrix4x4>(0);
            }
            set
            {
				this.material.CBuffers[0].SetBufferData(value, 0);
            }
        }
        
        public Color Parameters_TopColor
        {
            get
            {
                var cVector = this.material.CBuffers[1].GetBufferData<Evergine.Mathematics.Vector4>(0);
                return Color.FromVector4(ref cVector);
            }
            set
            {
                var cVector = value.ToVector4();
				this.material.CBuffers[1].SetBufferData(cVector, 0);
            }
        }
        
        public Color Parameters_BottomColor
        {
            get
            {
                var cVector = this.material.CBuffers[1].GetBufferData<Evergine.Mathematics.Vector4>(16);
                return Color.FromVector4(ref cVector);
            }
            set
            {
                var cVector = value.ToVector4();
				this.material.CBuffers[1].SetBufferData(cVector, 16);
            }
        }
        
        public float Parameters_BendRotationRandom
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(32);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 32);
            }
        }
        
        public float Parameters_BladeWidth
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(36);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 36);
            }
        }
        
        public float Parameters_BladeWidthRandom
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(40);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 40);
            }
        }
        
        public float Parameters_BladeHeight
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(44);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 44);
            }
        }
        
        public float Parameters_BladeHeightRandom
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(48);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 48);
            }
        }
    }
}
